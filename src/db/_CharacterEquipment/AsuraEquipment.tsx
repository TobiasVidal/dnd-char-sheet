import { CharacterEquipment } from "../../typings/character.d";
import { EquipmentEnum } from "../../typings/equipment.d";
import { CharacterId } from "../dbCharacter";
import { dbEquipment } from "../dbEquipment";

export const AsuraEquipment: CharacterEquipment[] = [
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.HealthPotionSmall)!,
        isEquipped: false,
        isCarried: true,
        inBackpack: false,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.ScrollOfRevivify)!,
        isEquipped: false,
        isCarried: true,
        inBackpack: false,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.Shield)!,
        isEquipped: false,
        isCarried: true,
        inBackpack: false,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.RingMail)!,
        isEquipped: true,
        isCarried: false,
        inBackpack: false,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.LuckStone)!,
        isEquipped: true,
        isCarried: false,
        inBackpack: false,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.HexbladeGreatsword)!,
        isEquipped: false,
        isCarried: true,
        inBackpack: false,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.HexbladeLance)!,
        isEquipped: false,
        isCarried: true,
        inBackpack: false,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.HexbladeLongsword)!,
        isEquipped: false,
        isCarried: true,
        inBackpack: false,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.HexbladeGlaive)!,
        isEquipped: false,
        isCarried: true,
        inBackpack: false,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.Book)!,
        isEquipped: false,
        isCarried: false,
        inBackpack: true,
        count: 2,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.Chalk)!,
        isEquipped: false,
        isCarried: false,
        inBackpack: true,
        count: 10,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.Piton)!,
        isEquipped: false,
        isCarried: false,
        inBackpack: true,
        count: 8,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.Hammer)!,
        isEquipped: false,
        isCarried: false,
        inBackpack: true,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.Shovel)!,
        isEquipped: false,
        isCarried: false,
        inBackpack: true,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.ExplorersPack)!,
        isEquipped: false,
        isCarried: false,
        inBackpack: true,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.Rations)!,
        isEquipped: false,
        isCarried: false,
        inBackpack: true,
        count: 10,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.Whetstone)!,
        isEquipped: false,
        isCarried: false,
        inBackpack: true,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.BlockAndTackle)!,
        isEquipped: false,
        isCarried: false,
        inBackpack: true,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.Crowbar)!,
        isEquipped: false,
        isCarried: false,
        inBackpack: true,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.Horn)!,
        isEquipped: false,
        isCarried: true,
        inBackpack: false,
        count: 1,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.RopeSilk)!,
        isEquipped: false,
        isCarried: false,
        inBackpack: true,
        count: 2,
    },
    { 
        equipment: dbEquipment.find(x => x.equipmentEnum === EquipmentEnum.DancingBoots)!,
        isEquipped: true,
        isCarried: false,
        inBackpack: false,
        count: 1,
    },
].map(x => ({ characterId: CharacterId.Asura, ...x }));